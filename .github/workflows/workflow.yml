name: Docker Image Security Scan

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile'
      - '**.json'
      - '**.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allows manual trigger from GitHub Actions

jobs:
  scan:
    name: Build and Scan Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: secure-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Run Trivy vulnerability scanner (Full Scan)
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'secure-app:latest'
          format: 'table'
          exit-code: '1'  # Ensure pipeline fails if vulnerabilities are found
          vuln-type: 'os,library'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
      
      - name: Block Pipeline on Vulnerabilities
        if: failure()
        run: |
          echo "::error::ðŸ›‘ SECURITY GATE FAILED: Vulnerabilities detected in the Docker image"
          echo "::error::ðŸ›‘ CI/CD Pipeline blocked - Image will not be pushed to Docker Hub"
          echo "::error::ðŸ›‘ Please fix the security issues before proceeding"
          exit 1
          
      - name: Generate SBOM
        if: success()
        run: |
          trivy image --format cyclonedx --output sbom.json secure-app:latest
        
      - name: Upload SBOM as Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
          
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Push Image to Docker Hub
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request' && success()
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/secure-app:latest
